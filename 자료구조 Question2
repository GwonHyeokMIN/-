class Node():
    def __init__(self):
        self.data=None
        self.next=None
        self.prev=None

def insertNode():
    global head,end
    vari=int(input("1.head insert, 2.middle insert, 3.end insert"))
    insertData=input("추가하실 노드의 데이터를 입력해주십시오:")
    if vari==1:
        newnode=Node()
        newnode.data=insertData
        newnode.next=head
        head.prev=newnode
        head=newnode

    if vari==2:
        prevData=input("추가하실 노드의 prev 노드를 입력 해주십시오:")
        current1=head
        while current1.data!=prevData:
            current1=current1.next
        current2=current1.next
        newnode=Node()
        newnode.data=insertData
        newnode.next=current2
        current2.prev=newnode
        newnode.prev=current1
        current1.next=newnode
        
    if vari==3:
        newnode=Node()
        newnode.data=insertData
        newnode.prev=end
        end.next=newnode
        end=newnode

def deleteNode():
    global head,end
    deleteData=input("제거하실 노드의 데이터를 입력해주십시오:")
    if head.data==deleteData:
        current1=head
        current2=head.next
        current1.next=None
        current2.prev=None
        del(current1)
        head=current2
        return
    
    if end.data==deleteData:
        current3=end
        current4=end.prev
        current3.prev=None
        current4.next=None
        del(current3)
        end=current4
        return

    if ((head.data != deleteData)and(end.data != deleteData)):
        current5=head
        while current5.data!=deleteData:
            current5=current5.next
        current6=current5.prev
        current7=current5.next
        current6.next=current7
        current7.prev=current6
        del(current5)
        return

def searchNode():
    global head
    searchData=input("찾고싶은 노드의 데이터를 입력하시오:")
    current=head
    while current.data != searchData:
        current=current.next
        if current == end:
            break
    if current.data!=searchData:
        print("no")
    if current.data==searchData:
        print("yes")
    
def printNode():
    global head
    current1 = head
    print("Data:[\"",current1.data,"\"",end="")
    while current1.next !=None:
        current1 =current1.next
        print(", \"",current1.data,"\"",end="")
    print("]")

def reverseNode():
    global head,end
    vare=end
    varh=head
    end=varh
    head=vare
    vare.next=vare.prev
    vare.prev=None
    varh.prev=varh.next
    while (vare!=varh.next):
        vare=vare.next
        savevar=vare.next
        vare.next=vare.prev
        vare.prev=savevar
    varh.next=None
    del(vare)
    printNode()
        
node1=Node()
node1.data="apple"

node2=Node()
node2.data="banana"
node2.prev=node1
node1.next=node2

node3=Node()
node3.data="carrot"
node3.prev=node2
node2.next=node3

node4=Node()
node4.data="graph"
node4.prev=node3
node3.next=node4

head=node1
end=node4

var,vari,vard,count=0,0,0,0
while True:
    var=input("1.Insert, 2.Delete, 3.Search, 4.Print, 5.Inverse, 6.Exit\n")
    if var=="1":
        insertNode()

    elif var=="2":
        deleteNode()

    elif var=="3":
        searchNode()

    elif var=="4":
        printNode()

    elif var=="5":
        reverseNode()

    elif var=="6":
        print("Exit.\n")
        break
    
    else:
        print("1~6의 숫자만 입력 하십시오")
        

